/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package FrontEnd;

import BackEnd.Objects.Bet;
import BackEnd.Objects.List.Node;
import BackEnd.Objects.List.NodeList;
import BackEnd.Reports.Report;
import BackEnd.Reports.ReportManager;
import BackEnd.Reports.ReportStatus;
import javax.swing.DefaultListModel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author jefemayoneso
 */
public class RaceResults extends javax.swing.JFrame {

    private final ReportManager manager;
    private final NodeList<Bet> bets;

    /**
     * Creates new form RaceResults
     */
    public RaceResults(NodeList<Bet> bets, ReportManager manager, ReportStatus sorting) {
        initComponents();
        this.bets = bets;
        this.manager = manager;

        showTableResult(sorting);
        showReports();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        panelResultsContainer = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        labelResults = new javax.swing.JLabel();
        jPanel5 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tableRaceResults = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();
        panelReportSection = new javax.swing.JPanel();
        panelVerifyBetsResults = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        listVerifyReport = new javax.swing.JList<>();
        jLabel1 = new javax.swing.JLabel();
        panelCalcPoints = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        listCalcReport = new javax.swing.JList<>();
        jLabel2 = new javax.swing.JLabel();
        panelSortingReport = new javax.swing.JPanel();
        jScrollPane4 = new javax.swing.JScrollPane();
        listSortReport = new javax.swing.JList<>();
        jLabel3 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel4.setLayout(new java.awt.CardLayout());

        labelResults.setText("RESULTADOS");
        jPanel4.add(labelResults, "card2");

        tableRaceResults.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Nombre", "Puntos", "C1", "C2", "C3", "C4", "C5", "C6", "C7", "C8", "C9", "C10"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Float.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.Integer.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tableRaceResults);
        if (tableRaceResults.getColumnModel().getColumnCount() > 0) {
            tableRaceResults.getColumnModel().getColumn(2).setResizable(false);
            tableRaceResults.getColumnModel().getColumn(2).setPreferredWidth(28);
            tableRaceResults.getColumnModel().getColumn(3).setResizable(false);
            tableRaceResults.getColumnModel().getColumn(3).setPreferredWidth(28);
            tableRaceResults.getColumnModel().getColumn(4).setResizable(false);
            tableRaceResults.getColumnModel().getColumn(4).setPreferredWidth(28);
            tableRaceResults.getColumnModel().getColumn(5).setResizable(false);
            tableRaceResults.getColumnModel().getColumn(5).setPreferredWidth(28);
            tableRaceResults.getColumnModel().getColumn(6).setResizable(false);
            tableRaceResults.getColumnModel().getColumn(6).setPreferredWidth(28);
            tableRaceResults.getColumnModel().getColumn(7).setResizable(false);
            tableRaceResults.getColumnModel().getColumn(7).setPreferredWidth(28);
            tableRaceResults.getColumnModel().getColumn(8).setResizable(false);
            tableRaceResults.getColumnModel().getColumn(8).setPreferredWidth(28);
            tableRaceResults.getColumnModel().getColumn(9).setResizable(false);
            tableRaceResults.getColumnModel().getColumn(9).setPreferredWidth(28);
            tableRaceResults.getColumnModel().getColumn(10).setResizable(false);
            tableRaceResults.getColumnModel().getColumn(10).setPreferredWidth(28);
            tableRaceResults.getColumnModel().getColumn(11).setResizable(false);
            tableRaceResults.getColumnModel().getColumn(11).setPreferredWidth(28);
        }

        jButton1.setText("EXPORTAR");

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1)
                .addContainerGap())
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(382, 382, 382)
                .addComponent(jButton1)
                .addContainerGap(399, Short.MAX_VALUE))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 305, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton1)
                .addGap(0, 12, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(15, Short.MAX_VALUE)
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout panelResultsContainerLayout = new javax.swing.GroupLayout(panelResultsContainer);
        panelResultsContainer.setLayout(panelResultsContainerLayout);
        panelResultsContainerLayout.setHorizontalGroup(
            panelResultsContainerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelResultsContainerLayout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        panelResultsContainerLayout.setVerticalGroup(
            panelResultsContainerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        panelReportSection.setLayout(new java.awt.GridLayout(1, 0));

        jScrollPane2.setViewportView(listVerifyReport);

        jLabel1.setText("VERIFICACION APUESTAS");

        javax.swing.GroupLayout panelVerifyBetsResultsLayout = new javax.swing.GroupLayout(panelVerifyBetsResults);
        panelVerifyBetsResults.setLayout(panelVerifyBetsResultsLayout);
        panelVerifyBetsResultsLayout.setHorizontalGroup(
            panelVerifyBetsResultsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelVerifyBetsResultsLayout.createSequentialGroup()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 299, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        panelVerifyBetsResultsLayout.setVerticalGroup(
            panelVerifyBetsResultsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelVerifyBetsResultsLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 114, Short.MAX_VALUE)
                .addGap(15, 15, 15))
        );

        panelReportSection.add(panelVerifyBetsResults);

        jScrollPane3.setViewportView(listCalcReport);

        jLabel2.setText("CALCULO DE RESULTADOS");

        javax.swing.GroupLayout panelCalcPointsLayout = new javax.swing.GroupLayout(panelCalcPoints);
        panelCalcPoints.setLayout(panelCalcPointsLayout);
        panelCalcPointsLayout.setHorizontalGroup(
            panelCalcPointsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelCalcPointsLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 299, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(panelCalcPointsLayout.createSequentialGroup()
                .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        panelCalcPointsLayout.setVerticalGroup(
            panelCalcPointsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelCalcPointsLayout.createSequentialGroup()
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(12, Short.MAX_VALUE))
        );

        panelReportSection.add(panelCalcPoints);

        jScrollPane4.setViewportView(listSortReport);

        jLabel3.setText("ORDENAMIENTO DE RESULTADOS");

        javax.swing.GroupLayout panelSortingReportLayout = new javax.swing.GroupLayout(panelSortingReport);
        panelSortingReport.setLayout(panelSortingReportLayout);
        panelSortingReportLayout.setHorizontalGroup(
            panelSortingReportLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelSortingReportLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 299, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(panelSortingReportLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        panelSortingReportLayout.setVerticalGroup(
            panelSortingReportLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelSortingReportLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        panelReportSection.add(panelSortingReport);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panelResultsContainer, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(panelReportSection, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(panelResultsContainer, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(panelReportSection, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JLabel labelResults;
    private javax.swing.JList<String> listCalcReport;
    private javax.swing.JList<String> listSortReport;
    private javax.swing.JList<String> listVerifyReport;
    private javax.swing.JPanel panelCalcPoints;
    private javax.swing.JPanel panelReportSection;
    private javax.swing.JPanel panelResultsContainer;
    private javax.swing.JPanel panelSortingReport;
    private javax.swing.JPanel panelVerifyBetsResults;
    private javax.swing.JTable tableRaceResults;
    // End of variables declaration//GEN-END:variables

    private void showTableResult(ReportStatus sorting) {
        long errors = 0;
        Node<Bet> current = sorting == ReportStatus.SORT_HIGH_TO_LOW ? this.bets.getTail() : this.bets.getHead();
        DefaultTableModel model = (DefaultTableModel) this.tableRaceResults.getModel();

        while (current != null) {
            if (current.getData().isValid()) {
                model.addRow(new Object[]{current.getData().getGambler().getName(),
                    current.getData().getGambler().getPoints(),
                    current.getData().getHorses()[0],
                    current.getData().getHorses()[1],
                    current.getData().getHorses()[2],
                    current.getData().getHorses()[3],
                    current.getData().getHorses()[4],
                    current.getData().getHorses()[5],
                    current.getData().getHorses()[6],
                    current.getData().getHorses()[7],
                    current.getData().getHorses()[8],
                    current.getData().getHorses()[9]});

            } else {
                errors++;
            }
            current = sorting == ReportStatus.SORT_HIGH_TO_LOW ? current.getNext() : current.getPrevious();
        }

        if (errors > 0) {
            this.labelResults.setText("RESULTADOS: " + "Hubieron " + errors
                    + " apuestas no validas, usa EXPORTAR para exportarlos a un CSV");
        }
    }

    private void showReports() {
        Node<Report> current = this.manager.getReportsOK().getTail();
        // show report for processsing bets
        DefaultListModel model = new DefaultListModel();

        while (current != null) {
            model.add(0, " Tiempo proces: apuestas: " + current.getData().getProcessingTIme() + " ms");
            model.add(1, " Prom. pasos: " + current.getData().getSteps() + " pasos");
            model.add(2, " Prom. pasos reales: " + current.getData().getRealSteps() + " pasos");
            model.add(3, " Max. pasos: " + current.getData().getMostSteps());
            model.add(4, " Min. pasos: " + current.getData().getLessSteps());

            if (null == current.getData().getStatus()) {
                this.listSortReport.setModel(model);
            } else {
                switch (current.getData().getStatus()) {
                    case CALCULATE_POINTS ->
                        this.listCalcReport.setModel(model);
                    case VALIDATE_BETS ->
                        this.listVerifyReport.setModel(model);
                    default ->
                        this.listSortReport.setModel(model);
                }
            }

            model = new DefaultListModel();
            current = current.getNext();
        }
    }
}
